---
- name: Setup Vprofile stack
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC setup variable
      include_vars: vars/output_vars

    - name: Import Vprofile setup variable
      include_vars: vars/vprostacksetup

    - name: create vprofile ec2 key
      amazon.aws.ec2_key:
        name: vprokey
        region: "{{region}}"
      register: vprokey_out

    - name: Save private key info file 
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./loginkey_vpro.pem"
        mode: 0600
      when: vprokey_out.changed

    - name: Create sg for load balancer
      ec2_group:
        name: vproELB-sg
        description: Allow port 80 eveywhere
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:  
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELB_out

    - name: create sg for ec2 instance
      ec2_group:
         name: vprostack-sg
         description: Allow port 22 everywhere
         region: "{{region}}"
         vpc_id: "{{vpcid}}"
         purge_rules: no
         rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELB_out.group_id}}"
          
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGid}}"
      register: vprostacksg_out

    - name: Update sg with its own sg id
      ec2_group:
        name: vprostack-sg
        description: Allow port 22 from everywhere
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vprostacksg_out.group_id}}"
    
    - name: Creating Nginx web01
      amazon.aws.ec2_instance:

        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "web01"
          Project: vprofilepproject
        exact_count: 1
        group_id: "{{vprostacksg_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out

    - name: Creating Tomcat app01
      amazon.aws.ec2_instance:

        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "app01"
          Project: vprofilepproject
        exact_count: 1
        group_id: "{{vprostacksg_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out
    
    - name: Creating Memcache mc01
      amazon.aws.ec2_instance:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "mc01"
          Project: vprofilepproject
        exact_count: 1
        group_id: "{{vprostacksg_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out

    - name: Creating Rabbitmq rmq01
      amazon.aws.ec2_instance:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "rmq01"
          Project: vprofilepproject
        exact_count: 1
        group_id: "{{vprostacksg_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out

    - name: Creating Mysql db01
      amazon.aws.ec2_instance:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "db01"
          Project: vprofilepproject
        exact_count: 1
        group_id: "{{vprostacksg_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: db01_out

    - debug:
        var: db01_out
